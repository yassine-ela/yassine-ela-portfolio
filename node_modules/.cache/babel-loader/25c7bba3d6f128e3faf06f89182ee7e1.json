{"ast":null,"code":"// adapted from https://github.com/dutchenkoOleg/sort-css-media-queries\nvar minMaxWidth = /(!?\\(\\s*min(-device-)?-width).+\\(\\s*max(-device)?-width/i;\nvar minWidth = /\\(\\s*min(-device)?-width/i;\nvar maxMinWidth = /(!?\\(\\s*max(-device)?-width).+\\(\\s*min(-device)?-width/i;\nvar maxWidth = /\\(\\s*max(-device)?-width/i;\nvar isMinWidth = _testQuery(minMaxWidth, maxMinWidth, minWidth);\nvar isMaxWidth = _testQuery(maxMinWidth, minMaxWidth, maxWidth);\nvar minMaxHeight = /(!?\\(\\s*min(-device)?-height).+\\(\\s*max(-device)?-height/i;\nvar minHeight = /\\(\\s*min(-device)?-height/i;\nvar maxMinHeight = /(!?\\(\\s*max(-device)?-height).+\\(\\s*min(-device)?-height/i;\nvar maxHeight = /\\(\\s*max(-device)?-height/i;\nvar isMinHeight = _testQuery(minMaxHeight, maxMinHeight, minHeight);\nvar isMaxHeight = _testQuery(maxMinHeight, minMaxHeight, maxHeight);\nvar isPrint = /print/i;\nvar isPrintOnly = /^print$/i;\nvar maxValue = Number.MAX_VALUE;\nfunction _getQueryLength(length) {\n  var matches = /(-?\\d*\\.?\\d+)(ch|em|ex|px|rem)/.exec(length);\n  if (matches === null) {\n    return maxValue;\n  }\n  var number = matches[1];\n  var unit = matches[2];\n  switch (unit) {\n    case \"ch\":\n      number = parseFloat(number) * 8.8984375;\n      break;\n    case \"em\":\n    case \"rem\":\n      number = parseFloat(number) * 16;\n      break;\n    case \"ex\":\n      number = parseFloat(number) * 8.296875;\n      break;\n    case \"px\":\n      number = parseFloat(number);\n      break;\n  }\n  return +number;\n}\nfunction _testQuery(doubleTestTrue, doubleTestFalse, singleTest) {\n  return function (query) {\n    if (doubleTestTrue.test(query)) {\n      return true;\n    } else if (doubleTestFalse.test(query)) {\n      return false;\n    }\n    return singleTest.test(query);\n  };\n}\nfunction _testIsPrint(a, b) {\n  var isPrintA = isPrint.test(a);\n  var isPrintOnlyA = isPrintOnly.test(a);\n  var isPrintB = isPrint.test(b);\n  var isPrintOnlyB = isPrintOnly.test(b);\n  if (isPrintA && isPrintB) {\n    if (!isPrintOnlyA && isPrintOnlyB) {\n      return 1;\n    }\n    if (isPrintOnlyA && !isPrintOnlyB) {\n      return -1;\n    }\n    return a.localeCompare(b);\n  }\n  if (isPrintA) {\n    return 1;\n  }\n  if (isPrintB) {\n    return -1;\n  }\n  return null;\n}\nexport default function sortCSSmq(a, b) {\n  if (a === \"\") {\n    return -1;\n  }\n  if (b === \"\") {\n    return 1;\n  }\n  var testIsPrint = _testIsPrint(a, b);\n  if (testIsPrint !== null) {\n    return testIsPrint;\n  }\n  var minA = isMinWidth(a) || isMinHeight(a);\n  var maxA = isMaxWidth(a) || isMaxHeight(a);\n  var minB = isMinWidth(b) || isMinHeight(b);\n  var maxB = isMaxWidth(b) || isMaxHeight(b);\n  if (minA && maxB) {\n    return -1;\n  }\n  if (maxA && minB) {\n    return 1;\n  }\n  var lengthA = _getQueryLength(a);\n  var lengthB = _getQueryLength(b);\n  if (lengthA === maxValue && lengthB === maxValue) {\n    return a.localeCompare(b);\n  } else if (lengthA === maxValue) {\n    return 1;\n  } else if (lengthB === maxValue) {\n    return -1;\n  }\n  if (lengthA > lengthB) {\n    if (maxA) {\n      return -1;\n    }\n    return 1;\n  }\n  if (lengthA < lengthB) {\n    if (maxA) {\n      return 1;\n    }\n    return -1;\n  }\n  return a.localeCompare(b);\n}","map":null,"metadata":{},"sourceType":"module"}