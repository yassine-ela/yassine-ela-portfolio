{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"C:\\\\yassinePortfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:\\\\yassinePortfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"component\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { styled, useThemeProps } from '../styles';\nimport { getFormHelperTextUtilityClass } from './formHelperTextClasses';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport formControlClasses from '../FormControl/formControlClasses';\nimport formLabelClasses from '../FormLabel/formLabelClasses';\nimport useSlot from '../utils/useSlot';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses() {\n  var slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClass, {});\n};\nvar FormHelperTextRoot = styled('div', {\n  name: 'JoyFormHelperText',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_ref) {\n  var _ref2;\n  var theme = _ref.theme;\n  return _ref2 = {\n    '--Icon-fontSize': 'calc(var(--FormHelperText-lineHeight) * 1em)',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '2px',\n    fontFamily: theme.vars.fontFamily.body,\n    fontSize: \"var(--FormHelperText-fontSize, \".concat(theme.vars.fontSize.sm, \")\"),\n    lineHeight: \"var(--FormHelperText-lineHeight, \".concat(theme.vars.lineHeight.sm, \")\"),\n    color: \"var(--FormHelperText-color, \".concat(theme.vars.palette.text.tertiary, \")\"),\n    margin: 'var(--FormHelperText-margin, 0px)'\n  }, _defineProperty(_ref2, \".\".concat(formLabelClasses.root, \" + &\"), {\n    '--FormHelperText-margin': '0px' // remove the margin if the helper text is next to the form label.\n  }), _defineProperty(_ref2, \".\".concat(formControlClasses.error, \" &\"), {\n    '--Icon-color': 'currentColor'\n  }), _ref2;\n});\n/**\n *\n * Demos:\n *\n * - [Input](https://mui.com/joy-ui/react-input/)\n *\n * API:\n *\n * - [FormHelperText API](https://mui.com/joy-ui/api/form-helper-text/)\n */\nvar FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'JoyFormHelperText'\n  });\n  var children = props.children,\n    component = props.component,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var rootRef = React.useRef(null);\n  var handleRef = useForkRef(rootRef, ref);\n  var formControl = React.useContext(FormControlContext);\n  var setHelperText = formControl == null ? void 0 : formControl.setHelperText;\n  React.useEffect(function () {\n    setHelperText == null || setHelperText(rootRef.current);\n    return function () {\n      setHelperText == null || setHelperText(null);\n    };\n  }, [setHelperText]);\n  var classes = useUtilityClasses();\n  var externalForwardedProps = _extends({}, other, {\n    component: component,\n    slots: slots,\n    slotProps: slotProps\n  });\n  var _useSlot = useSlot('root', {\n      ref: handleRef,\n      elementType: FormHelperTextRoot,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: props,\n      additionalProps: {\n        as: component,\n        id: formControl == null ? void 0 : formControl['aria-describedby']\n      },\n      className: classes.root\n    }),\n    _useSlot2 = _slicedToArray(_useSlot, 2),\n    SlotRoot = _useSlot2[0],\n    rootProps = _useSlot2[1];\n  return /*#__PURE__*/_jsx(SlotRoot, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormHelperText;","map":null,"metadata":{},"sourceType":"module"}