{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = bindKeyboard;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _keycode = _interopRequireDefault(require(\"keycode\"));\nvar _reactEventListener = _interopRequireDefault(require(\"react-event-listener\"));\nvar _reactSwipeableViewsCore = require(\"react-swipeable-views-core\");\nfunction bindKeyboard(MyComponent) {\n  var BindKeyboard = /*#__PURE__*/\n  function (_React$Component) {\n    (0, _inherits2.default)(BindKeyboard, _React$Component);\n    function BindKeyboard() {\n      var _getPrototypeOf2;\n      var _this;\n      (0, _classCallCheck2.default)(this, BindKeyboard);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(BindKeyboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {};\n      _this.handleKeyDown = function (event) {\n        var action;\n        var _this$props = _this.props,\n          _this$props$axis = _this$props.axis,\n          axis = _this$props$axis === void 0 ? 'x' : _this$props$axis,\n          children = _this$props.children,\n          onChangeIndex = _this$props.onChangeIndex,\n          slideCount = _this$props.slideCount;\n        switch ((0, _keycode.default)(event)) {\n          case 'page down':\n          case 'down':\n            if (axis === 'y') {\n              action = 'decrease';\n            } else if (axis === 'y-reverse') {\n              action = 'increase';\n            }\n            break;\n          case 'left':\n            if (axis === 'x') {\n              action = 'decrease';\n            } else if (axis === 'x-reverse') {\n              action = 'increase';\n            }\n            break;\n          case 'page up':\n          case 'up':\n            if (axis === 'y') {\n              action = 'increase';\n            } else if (axis === 'y-reverse') {\n              action = 'decrease';\n            }\n            break;\n          case 'right':\n            if (axis === 'x') {\n              action = 'increase';\n            } else if (axis === 'x-reverse') {\n              action = 'decrease';\n            }\n            break;\n          default:\n            break;\n        }\n        if (action) {\n          var indexLatest = _this.state.index;\n          var indexNew = indexLatest;\n          if (action === 'increase') {\n            indexNew += 1;\n          } else {\n            indexNew -= 1;\n          }\n          if (slideCount || children) {\n            indexNew = (0, _reactSwipeableViewsCore.mod)(indexNew, slideCount || _react.default.Children.count(children));\n          } // Is uncontrolled\n\n          if (_this.props.index === undefined) {\n            _this.setState({\n              index: indexNew\n            });\n          }\n          if (onChangeIndex) {\n            onChangeIndex(indexNew, indexLatest);\n          }\n        }\n      };\n      _this.handleChangeIndex = function (index, indexLatest, meta) {\n        // Is uncontrolled\n        if (_this.props.index === undefined) {\n          _this.setState({\n            index: index\n          });\n        }\n        if (_this.props.onChangeIndex) {\n          _this.props.onChangeIndex(index, indexLatest, meta);\n        }\n      };\n      return _this;\n    }\n    (0, _createClass2.default)(BindKeyboard, [{\n      key: \"UNSAFE_componentWillMount\",\n      // eslint-disable-next-line camelcase,react/sort-comp\n      value: function UNSAFE_componentWillMount() {\n        this.setState({\n          index: this.props.index || 0\n        });\n      } // eslint-disable-next-line camelcase,react/sort-comp\n    }, {\n      key: \"UNSAFE_componentWillReceiveProps\",\n      value: function UNSAFE_componentWillReceiveProps(nextProps) {\n        var index = nextProps.index;\n        if (typeof index === 'number' && index !== this.props.index) {\n          this.setState({\n            index: index\n          });\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props2 = this.props,\n          indexProp = _this$props2.index,\n          onChangeIndex = _this$props2.onChangeIndex,\n          other = (0, _objectWithoutProperties2.default)(_this$props2, [\"index\", \"onChangeIndex\"]);\n        var index = this.state.index;\n        return _react.default.createElement(_reactEventListener.default, {\n          target: \"window\",\n          onKeyDown: this.handleKeyDown\n        }, _react.default.createElement(MyComponent, (0, _extends2.default)({\n          index: index,\n          onChangeIndex: this.handleChangeIndex\n        }, other)));\n      }\n    }]);\n    return BindKeyboard;\n  }(_react.default.Component);\n  BindKeyboard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n    /**\n     * @ignore\n     */\n    axis: _propTypes.default.oneOf(['x', 'x-reverse', 'y', 'y-reverse']),\n    /**\n     * @ignore\n     */\n    children: _propTypes.default.node,\n    /**\n     * @ignore\n     */\n    index: _propTypes.default.number,\n    /**\n     * @ignore\n     */\n    onChangeIndex: _propTypes.default.func,\n    /**\n     * @ignore\n     */\n    slideCount: _propTypes.default.number\n  } : {};\n  return BindKeyboard;\n}","map":null,"metadata":{},"sourceType":"script"}