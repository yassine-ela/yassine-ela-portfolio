{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"C:\\\\yassinePortfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:\\\\yassinePortfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"checked\", \"defaultChecked\", \"disabled\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\", \"id\", \"color\", \"variant\", \"size\", \"startDecorator\", \"endDecorator\", \"component\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { useSwitch } from '@mui/base/useSwitch';\nimport { styled, useThemeProps } from '../styles';\nimport { useColorInversion } from '../styles/ColorInversion';\nimport useSlot from '../utils/useSlot';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var checked = ownerState.checked,\n    disabled = ownerState.disabled,\n    focusVisible = ownerState.focusVisible,\n    readOnly = ownerState.readOnly,\n    color = ownerState.color,\n    variant = ownerState.variant;\n  var slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', focusVisible && 'focusVisible', readOnly && 'readOnly', variant && \"variant\".concat(capitalize(variant)), color && \"color\".concat(capitalize(color))],\n    thumb: ['thumb', checked && 'checked'],\n    track: ['track', checked && 'checked'],\n    action: ['action', focusVisible && 'focusVisible'],\n    input: ['input'],\n    startDecorator: ['startDecorator'],\n    endDecorator: ['endDecorator']\n  };\n  return composeClasses(slots, getSwitchUtilityClass, {});\n};\nvar switchColorVariables = function switchColorVariables(_ref3) {\n  var theme = _ref3.theme,\n    ownerState = _ref3.ownerState;\n  return function () {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _theme$variants, _styles$backgroundCol, _styles$backgroundCol2;\n    var styles = ((_theme$variants = theme.variants[\"\".concat(ownerState.variant).concat(data.state || '')]) == null ? void 0 : _theme$variants[ownerState.color]) || {};\n    return {\n      '--Switch-trackBackground': (_styles$backgroundCol = styles.backgroundColor) != null ? _styles$backgroundCol : theme.vars.palette.background.surface,\n      '--Switch-trackColor': styles.color,\n      '--Switch-trackBorderColor': ownerState.variant === 'outlined' ? styles.borderColor : 'currentColor',\n      '--Switch-thumbBackground': styles.color,\n      '--Switch-thumbColor': (_styles$backgroundCol2 = styles.backgroundColor) != null ? _styles$backgroundCol2 : theme.vars.palette.background.surface\n    };\n  };\n};\nvar SwitchRoot = styled('div', {\n  name: 'JoySwitch',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_ref4) {\n  var _extends2;\n  var theme = _ref4.theme,\n    ownerState = _ref4.ownerState;\n  var _theme$variants2;\n  var getColorVariables = switchColorVariables({\n    theme: theme,\n    ownerState: ownerState\n  });\n  return _extends({\n    '--Icon-color': 'currentColor',\n    '--variant-borderWidth': (_theme$variants2 = theme.variants[ownerState.variant]) == null || (_theme$variants2 = _theme$variants2[ownerState.color]) == null ? void 0 : _theme$variants2['--variant-borderWidth'],\n    '--Switch-trackRadius': theme.vars.radius.xl,\n    '--Switch-thumbShadow': ownerState.variant === 'soft' ? 'none' : '0 0 0 1px var(--Switch-trackBackground)'\n  }, ownerState.size === 'sm' && {\n    '--Switch-trackWidth': '32px',\n    '--Switch-trackHeight': '16px',\n    '--Switch-thumbSize': '8px',\n    '--Switch-gap': '6px',\n    fontSize: theme.vars.fontSize.sm\n  }, ownerState.size === 'md' && {\n    '--Switch-trackWidth': '40px',\n    '--Switch-trackHeight': '20px',\n    '--Switch-thumbSize': '12px',\n    '--Switch-gap': '8px',\n    fontSize: theme.vars.fontSize.md\n  }, ownerState.size === 'lg' && {\n    '--Switch-trackWidth': '48px',\n    '--Switch-trackHeight': '24px',\n    '--Switch-thumbSize': '16px',\n    '--Switch-gap': '12px'\n  }, {\n    '--unstable_paddingBlock': \"max((var(--Switch-trackHeight) - 2 * var(--variant-borderWidth, 0px) - var(--Switch-thumbSize)) / 2, 0px)\",\n    '--Switch-thumbRadius': \"max(var(--Switch-trackRadius) - var(--unstable_paddingBlock), min(var(--unstable_paddingBlock) / 2, var(--Switch-trackRadius) / 2))\",\n    '--Switch-thumbWidth': 'var(--Switch-thumbSize)',\n    '--Switch-thumbOffset': \"max((var(--Switch-trackHeight) - var(--Switch-thumbSize)) / 2, 0px)\"\n  }, getColorVariables(), (_extends2 = {\n    '&:hover': _extends({}, getColorVariables({\n      state: 'Hover'\n    }))\n  }, _defineProperty(_extends2, \"&.\".concat(switchClasses.checked), _extends({}, getColorVariables(), {\n    '&:hover': _extends({}, getColorVariables({\n      state: 'Hover'\n    }))\n  })), _defineProperty(_extends2, \"&.\".concat(switchClasses.disabled), _extends({\n    pointerEvents: 'none',\n    color: theme.vars.palette.text.tertiary\n  }, getColorVariables({\n    state: 'Disabled'\n  }))), _defineProperty(_extends2, \"display\", 'inline-flex'), _defineProperty(_extends2, \"alignItems\", 'center'), _defineProperty(_extends2, \"alignSelf\", 'center'), _defineProperty(_extends2, \"fontFamily\", theme.vars.fontFamily.body), _defineProperty(_extends2, \"position\", 'relative'), _defineProperty(_extends2, \"padding\", 'calc((var(--Switch-thumbSize) / 2) - (var(--Switch-trackHeight) / 2)) calc(-1 * var(--Switch-thumbOffset))'), _defineProperty(_extends2, \"backgroundColor\", 'initial'), _defineProperty(_extends2, \"border\", 'none'), _defineProperty(_extends2, \"margin\", 'var(--unstable_Switch-margin)'), _extends2));\n});\nvar SwitchAction = styled('div', {\n  name: 'JoySwitch',\n  slot: 'Action',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.action;\n  }\n})(function (_ref5) {\n  var theme = _ref5.theme;\n  return _defineProperty({\n    borderRadius: 'var(--Switch-trackRadius)',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n  }, theme.focus.selector, theme.focus.default);\n});\nvar SwitchInput = styled('input', {\n  name: 'JoySwitch',\n  slot: 'Input',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.input;\n  }\n})({\n  margin: 0,\n  height: '100%',\n  width: '100%',\n  opacity: 0,\n  position: 'absolute',\n  cursor: 'pointer'\n});\nvar SwitchTrack = styled('span', {\n  name: 'JoySwitch',\n  slot: 'Track',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.track;\n  }\n})(function (_ref7) {\n  var theme = _ref7.theme,\n    ownerState = _ref7.ownerState;\n  return _extends({\n    position: 'relative',\n    color: 'var(--Switch-trackColor)',\n    height: 'var(--Switch-trackHeight)',\n    width: 'var(--Switch-trackWidth)',\n    display: 'flex',\n    flexShrink: 0,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n    border: 'var(--variant-borderWidth, 0px) solid',\n    borderColor: 'var(--Switch-trackBorderColor)',\n    backgroundColor: 'var(--Switch-trackBackground)',\n    borderRadius: 'var(--Switch-trackRadius)',\n    fontFamily: theme.vars.fontFamily.body\n  }, ownerState.size === 'sm' && {\n    fontSize: theme.vars.fontSize.xs\n  }, ownerState.size === 'md' && {\n    fontSize: theme.vars.fontSize.sm\n  }, ownerState.size === 'lg' && {\n    fontSize: theme.vars.fontSize.md\n  });\n});\nvar SwitchThumb = styled('span', {\n  name: 'JoySwitch',\n  slot: 'Thumb',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.thumb;\n  }\n})(_defineProperty({\n  '--Icon-fontSize': 'calc(var(--Switch-thumbSize) * 0.75)',\n  display: 'inline-flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  top: '50%',\n  left: 'calc(50% - var(--Switch-trackWidth) / 2 + var(--Switch-thumbWidth) / 2 + var(--Switch-thumbOffset))',\n  transform: 'translate(-50%, -50%)',\n  width: 'var(--Switch-thumbWidth)',\n  height: 'var(--Switch-thumbSize)',\n  borderRadius: 'var(--Switch-thumbRadius)',\n  boxShadow: 'var(--Switch-thumbShadow)',\n  color: 'var(--Switch-thumbColor)',\n  backgroundColor: 'var(--Switch-thumbBackground)'\n}, \"&.\".concat(switchClasses.checked), {\n  left: 'calc(50% + var(--Switch-trackWidth) / 2 - var(--Switch-thumbWidth) / 2 - var(--Switch-thumbOffset))'\n}));\nvar SwitchStartDecorator = styled('span', {\n  name: 'JoySwitch',\n  slot: 'StartDecorator',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.startDecorator;\n  }\n})({\n  display: 'inline-flex',\n  marginInlineEnd: 'var(--Switch-gap)'\n});\nvar SwitchEndDecorator = styled('span', {\n  name: 'JoySwitch',\n  slot: 'EndDecorator',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.endDecorator;\n  }\n})({\n  display: 'inline-flex',\n  marginInlineStart: 'var(--Switch-gap)'\n});\n/**\n *\n * Demos:\n *\n * - [Switch](https://mui.com/joy-ui/react-switch/)\n *\n * API:\n *\n * - [Switch API](https://mui.com/joy-ui/api/switch/)\n */\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  var _ref, _inProps$size, _formControl$color, _ref2, _inProps$disabled;\n  var props = useThemeProps({\n    props: inProps,\n    name: 'JoySwitch'\n  });\n  var disabledExternalProp = props.disabled,\n    id = props.id,\n    colorProp = props.color,\n    _props$variant = props.variant,\n    variant = _props$variant === void 0 ? 'solid' : _props$variant,\n    _props$size = props.size,\n    sizeProp = _props$size === void 0 ? 'md' : _props$size,\n    startDecorator = props.startDecorator,\n    endDecorator = props.endDecorator,\n    component = props.component,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var formControl = React.useContext(FormControlContext);\n  if (process.env.NODE_ENV !== 'production') {\n    var registerEffect = formControl == null ? void 0 : formControl.registerEffect;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (registerEffect) {\n        return registerEffect();\n      }\n      return undefined;\n    }, [registerEffect]);\n  }\n  var size = (_ref = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref : sizeProp;\n  var _useColorInversion = useColorInversion(variant),\n    getColor = _useColorInversion.getColor;\n  var color = getColor(inProps.color, formControl != null && formControl.error ? 'danger' : (_formControl$color = formControl == null ? void 0 : formControl.color) != null ? _formControl$color : colorProp);\n  var useSwitchProps = _extends({\n    disabled: (_ref2 = (_inProps$disabled = inProps.disabled) != null ? _inProps$disabled : formControl == null ? void 0 : formControl.disabled) != null ? _ref2 : disabledExternalProp\n  }, props);\n  var _useSwitch = useSwitch(useSwitchProps),\n    getInputProps = _useSwitch.getInputProps,\n    checked = _useSwitch.checked,\n    disabled = _useSwitch.disabled,\n    focusVisible = _useSwitch.focusVisible,\n    readOnly = _useSwitch.readOnly;\n  var ownerState = _extends({}, props, {\n    id: id,\n    checked: checked,\n    disabled: disabled,\n    focusVisible: focusVisible,\n    readOnly: readOnly,\n    color: checked ? color || 'primary' : color || 'neutral',\n    variant: variant,\n    size: size\n  });\n  var classes = useUtilityClasses(ownerState);\n  var externalForwardedProps = _extends({}, other, {\n    component: component,\n    slots: slots,\n    slotProps: slotProps\n  });\n  var _useSlot = useSlot('root', {\n      ref: ref,\n      className: classes.root,\n      elementType: SwitchRoot,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState\n    }),\n    _useSlot2 = _slicedToArray(_useSlot, 2),\n    SlotRoot = _useSlot2[0],\n    rootProps = _useSlot2[1];\n  var _useSlot3 = useSlot('startDecorator', {\n      additionalProps: {\n        'aria-hidden': true // hide the decorator from assistive technology\n      },\n\n      className: classes.startDecorator,\n      elementType: SwitchStartDecorator,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState\n    }),\n    _useSlot4 = _slicedToArray(_useSlot3, 2),\n    SlotStartDecorator = _useSlot4[0],\n    startDecoratorProps = _useSlot4[1];\n  var _useSlot5 = useSlot('endDecorator', {\n      additionalProps: {\n        'aria-hidden': true // hide the decorator from assistive technology\n      },\n\n      className: classes.endDecorator,\n      elementType: SwitchEndDecorator,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState\n    }),\n    _useSlot6 = _slicedToArray(_useSlot5, 2),\n    SlotEndDecorator = _useSlot6[0],\n    endDecoratorProps = _useSlot6[1];\n  var _useSlot7 = useSlot('track', {\n      className: classes.track,\n      elementType: SwitchTrack,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState\n    }),\n    _useSlot8 = _slicedToArray(_useSlot7, 2),\n    SlotTrack = _useSlot8[0],\n    trackProps = _useSlot8[1];\n  var _useSlot9 = useSlot('thumb', {\n      className: classes.thumb,\n      elementType: SwitchThumb,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState\n    }),\n    _useSlot10 = _slicedToArray(_useSlot9, 2),\n    SlotThumb = _useSlot10[0],\n    thumbProps = _useSlot10[1];\n  var _useSlot11 = useSlot('action', {\n      className: classes.action,\n      elementType: SwitchAction,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState\n    }),\n    _useSlot12 = _slicedToArray(_useSlot11, 2),\n    SlotAction = _useSlot12[0],\n    actionProps = _useSlot12[1];\n  var _useSlot13 = useSlot('input', {\n      additionalProps: {\n        id: id != null ? id : formControl == null ? void 0 : formControl.htmlFor,\n        'aria-describedby': formControl == null ? void 0 : formControl['aria-describedby']\n      },\n      className: classes.input,\n      elementType: SwitchInput,\n      externalForwardedProps: externalForwardedProps,\n      getSlotProps: getInputProps,\n      ownerState: ownerState\n    }),\n    _useSlot14 = _slicedToArray(_useSlot13, 2),\n    SlotInput = _useSlot14[0],\n    inputProps = _useSlot14[1];\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [startDecorator && /*#__PURE__*/_jsx(SlotStartDecorator, _extends({}, startDecoratorProps, {\n      children: typeof startDecorator === 'function' ? startDecorator(ownerState) : startDecorator\n    })), /*#__PURE__*/_jsxs(SlotTrack, _extends({}, trackProps, {\n      children: [trackProps == null ? void 0 : trackProps.children, /*#__PURE__*/_jsx(SlotThumb, _extends({}, thumbProps))]\n    })), /*#__PURE__*/_jsx(SlotAction, _extends({}, actionProps, {\n      children: /*#__PURE__*/_jsx(SlotInput, _extends({}, inputProps))\n    })), endDecorator && /*#__PURE__*/_jsx(SlotEndDecorator, _extends({}, endDecoratorProps, {\n      children: typeof endDecorator === 'function' ? endDecorator(ownerState) : endDecorator\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The element that appears at the end of the switch.\n   */\n  endDecorator: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.node, PropTypes.func]),\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    endDecorator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startDecorator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    thumb: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    track: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    action: PropTypes.elementType,\n    endDecorator: PropTypes.elementType,\n    input: PropTypes.elementType,\n    root: PropTypes.elementType,\n    startDecorator: PropTypes.elementType,\n    thumb: PropTypes.elementType,\n    track: PropTypes.elementType\n  }),\n  /**\n   * The element that appears at the end of the switch.\n   */\n  startDecorator: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.node, PropTypes.func]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'solid'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Switch;","map":null,"metadata":{},"sourceType":"module"}