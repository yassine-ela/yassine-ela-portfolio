{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"C:\\\\yassinePortfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:\\\\yassinePortfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _styled;\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"onClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useThemeProps, styled } from '../styles';\nimport useSlot from '../utils/useSlot';\nimport { getModalOverflowUtilityClass } from './modalOverflowClasses';\nimport CloseModalContext from '../Modal/CloseModalContext';\nimport modalDialogClasses from '../ModalDialog/modalDialogClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses() {\n  var slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getModalOverflowUtilityClass, {});\n};\nexport var ModalOverflowRoot = styled('div', {\n  name: 'JoyModalOverflow',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})((_styled = {\n  '--ModalOverflow-paddingY': '1.5rem',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  height: '100%',\n  overflow: 'hidden auto',\n  outline: 'none',\n  display: 'flex',\n  flexDirection: 'column',\n  // required for fullscreen ModalDialog, using `row` cannot be achieved.\n  padding: 'var(--ModalOverflow-paddingY) 0'\n}, _defineProperty(_styled, \"& .\".concat(modalDialogClasses.layoutCenter), {\n  position: 'relative',\n  margin: 'auto',\n  // to make the dialog stay at center when content does not overflow the screen.\n  height: 'max-content',\n  // height is based on content, otherwise `margin: auto` will take place.\n  maxHeight: 'unset',\n  transform: 'none',\n  top: 'unset',\n  left: 'unset'\n}), _defineProperty(_styled, \"& .\".concat(modalDialogClasses.layoutFullscreen), {\n  position: 'relative',\n  width: '100%',\n  margin: 'calc(-1 * var(--ModalOverflow-paddingY)) 0',\n  flex: 1\n}), _styled));\n/**\n *\n * Demos:\n *\n * - [Modal](https://mui.com/joy-ui/react-modal/)\n *\n * API:\n *\n * - [ModalOverflow API](https://mui.com/joy-ui/api/modal-overflow/)\n */\nvar ModalOverflow = /*#__PURE__*/React.forwardRef(function ModalOverflow(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'JoyModalOverflow'\n  });\n  var children = props.children,\n    _onClick = props.onClick,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var onClose = React.useContext(CloseModalContext);\n  var ownerState = props;\n  var classes = useUtilityClasses();\n  var _useSlot = useSlot('root', {\n      ref: ref,\n      className: classes.root,\n      elementType: ModalOverflowRoot,\n      externalForwardedProps: other,\n      ownerState: ownerState,\n      additionalProps: {\n        role: 'presentation',\n        tabIndex: -1,\n        onClick: function onClick(event) {\n          if (event.target === event.currentTarget) {\n            onClose == null || onClose(event, 'backdropClick');\n          }\n          _onClick == null || _onClick(event);\n        }\n      }\n    }),\n    _useSlot2 = _slicedToArray(_useSlot, 2),\n    SlotRoot = _useSlot2[0],\n    rootProps = _useSlot2[1];\n  return /*#__PURE__*/_jsx(SlotRoot, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalOverflow.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ModalOverflow;","map":null,"metadata":{},"sourceType":"module"}