{"ast":null,"code":"import { useReducer } from 'react';\n\n/**\r\n * Returns a function that triggers a component update. the hook equivalent to\r\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\r\n * is preferable but may be required in some advanced usages of refs for interop or\r\n * when direct DOM manipulation is required.\r\n *\r\n * ```ts\r\n * const forceUpdate = useForceUpdate();\r\n *\r\n * const updateOnClick = useCallback(() => {\r\n *  forceUpdate()\r\n * }, [forceUpdate])\r\n *\r\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\r\n * ```\r\n */\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are strictly equal to the last state value\n  const [, dispatch] = useReducer(state => !state, false);\n  return dispatch;\n}","map":null,"metadata":{},"sourceType":"module"}