{"ast":null,"code":"import _defineProperty from \"C:\\\\yassinePortfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\yassinePortfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { unstable_createGetCssVar as createGetCssVar } from '@mui/system';\nexport var isVariantPalette = function isVariantPalette(colorPalette) {\n  return colorPalette && typeof colorPalette === 'object' && Object.keys(colorPalette).some(function (value) {\n    var _value$match;\n    return (_value$match = value.match) == null ? void 0 : _value$match.call(value, /^(plain(Hover|Active|Disabled)?(Color|Bg)|outlined(Hover|Active|Disabled)?(Color|Border|Bg)|soft(Hover|Active|Disabled)?(Color|Bg)|solid(Hover|Active|Disabled)?(Color|Bg))$/);\n  });\n};\nvar assignCss = function assignCss(target, variantVar, value) {\n  if (variantVar.includes('Color')) {\n    target.color = value;\n  }\n  if (variantVar.includes('Bg')) {\n    target.backgroundColor = value;\n  }\n  if (variantVar.includes('Border')) {\n    target.borderColor = value;\n  }\n};\n\n/**\n *\n * @param name variant name\n * @example 'plain'\n *\n * @param palette object that contains palette tokens\n * @example { primary: { plainColor: '', plainHoverColor: '', ...tokens }, ...other palette }\n *\n * @param getCssVar a function that receive variant token and return a CSS variable\n *\n * result will be the stylesheet based on the palette tokens\n * @example {\n *   color: '--token',\n *   backgroundColor: '--token',\n *   '--variant-borderWidth': '0px',\n * }\n * @example {\n *   cursor: 'pointer',\n *   color: '--token',\n *   backgroundColor: '--token',\n *   '--variant-borderWidth': '1px',\n * }\n * @example {\n *   pointerEvents: 'none',\n *   cursor: 'default',\n *   color: '--token',\n *   backgroundColor: '--token',\n *   '--variant-borderWidth': '0px',\n * }\n */\nexport var createVariantStyle = function createVariantStyle(name, palette, getCssVar) {\n  var result = {};\n  Object.entries(palette || {}).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      variantVar = _ref2[0],\n      value = _ref2[1];\n    if (variantVar.match(new RegExp(\"\".concat(name, \"(color|bg|border)\"), 'i')) && !!value) {\n      var cssVar = getCssVar ? getCssVar(variantVar) : value;\n      if (variantVar.includes('Disabled')) {\n        result.pointerEvents = 'none';\n        result.cursor = 'default';\n        result['--Icon-color'] = 'currentColor';\n      }\n      if (variantVar.match(/(Hover|Active|Disabled)/)) {\n        assignCss(result, variantVar, cssVar);\n      } else {\n        // initial state\n        if (!result['--variant-borderWidth']) {\n          // important to prevent inheritance, otherwise the children will have the wrong styles e.g.\n          //   <Card variant=\"outlined\">\n          //     <Typography variant=\"soft\">\n          result['--variant-borderWidth'] = '0px';\n        }\n        if (variantVar.includes('Border')) {\n          result['--variant-borderWidth'] = '1px';\n          result.border = 'var(--variant-borderWidth) solid';\n        }\n        // border color should come later\n        assignCss(result, variantVar, cssVar);\n      }\n    }\n  });\n  return result;\n};\nvar createPrefixVar = function createPrefixVar(cssVarPrefix) {\n  return function (cssVar) {\n    return \"--\".concat(cssVarPrefix ? \"\".concat(cssVarPrefix, \"-\") : '').concat(cssVar.replace(/^--/, ''));\n  };\n};\n\n// It's used only in extendTheme, so it's safe to always include default values\nexport var createVariant = function createVariant(variant, theme) {\n  var result = {};\n  if (theme) {\n    var getCssVar = theme.getCssVar,\n      palette = theme.palette;\n    Object.entries(palette).forEach(function (entry) {\n      var _entry = _slicedToArray(entry, 2),\n        color = _entry[0],\n        colorPalette = _entry[1];\n      if (isVariantPalette(colorPalette) && typeof colorPalette === 'object') {\n        result = _extends({}, result, _defineProperty({}, color, createVariantStyle(variant, colorPalette, function (variantVar) {\n          return getCssVar(\"palette-\".concat(color, \"-\").concat(variantVar), palette[color][variantVar]);\n        })));\n      }\n    });\n  }\n  result.context = createVariantStyle(variant, {\n    plainColor: 'var(--variant-plainColor)',\n    plainHoverColor: \"var(--variant-plainHoverColor)\",\n    plainHoverBg: 'var(--variant-plainHoverBg)',\n    plainActiveBg: 'var(--variant-plainActiveBg)',\n    plainDisabledColor: 'var(--variant-plainDisabledColor)',\n    outlinedColor: 'var(--variant-outlinedColor)',\n    outlinedBorder: 'var(--variant-outlinedBorder)',\n    outlinedHoverColor: \"var(--variant-outlinedHoverColor)\",\n    outlinedHoverBorder: \"var(--variant-outlinedHoverBorder)\",\n    outlinedHoverBg: \"var(--variant-outlinedHoverBg)\",\n    outlinedActiveBg: \"var(--variant-outlinedActiveBg)\",\n    outlinedDisabledColor: \"var(--variant-outlinedDisabledColor)\",\n    outlinedDisabledBorder: \"var(--variant-outlinedDisabledBorder)\",\n    softColor: 'var(--variant-softColor)',\n    softBg: 'var(--variant-softBg)',\n    softHoverColor: 'var(--variant-softHoverColor)',\n    softHoverBg: 'var(--variant-softHoverBg)',\n    softActiveBg: 'var(--variant-softActiveBg)',\n    softDisabledColor: 'var(--variant-softDisabledColor)',\n    softDisabledBg: 'var(--variant-softDisabledBg)',\n    solidColor: 'var(--variant-solidColor)',\n    solidBg: 'var(--variant-solidBg)',\n    solidHoverBg: 'var(--variant-solidHoverBg)',\n    solidActiveBg: 'var(--variant-solidActiveBg)',\n    solidDisabledColor: 'var(--variant-solidDisabledColor)',\n    solidDisabledBg: 'var(--variant-solidDisabledBg)'\n  });\n  return result;\n};\nexport var createSoftInversion = function createSoftInversion(theme, addDefaultValues) {\n  var getCssVarDefault = createGetCssVar(theme.cssVarPrefix);\n  var prefixVar = createPrefixVar(theme.cssVarPrefix);\n  var result = {};\n  var getCssVar = addDefaultValues ? function (cssVar) {\n    var _theme$palette;\n    var tokens = cssVar.split('-');\n    var color = tokens[1];\n    var value = tokens[2];\n    return getCssVarDefault(cssVar, (_theme$palette = theme.palette) == null || (_theme$palette = _theme$palette[color]) == null ? void 0 : _theme$palette[value]);\n  } : getCssVarDefault;\n  Object.entries(theme.palette).forEach(function (entry) {\n    var _entry2 = _slicedToArray(entry, 2),\n      color = _entry2[0],\n      colorPalette = _entry2[1];\n    if (isVariantPalette(colorPalette)) {\n      var _theme$getColorScheme, _theme$getColorScheme2, _result$color;\n      result[color] = (_result$color = {\n        '--Badge-ringColor': getCssVar(\"palette-\".concat(color, \"-softBg\"))\n      }, _defineProperty(_result$color, theme.getColorSchemeSelector('dark'), (_theme$getColorScheme = {}, _defineProperty(_theme$getColorScheme, prefixVar('--palette-focusVisible'), getCssVar(\"palette-\".concat(color, \"-300\"))), _defineProperty(_theme$getColorScheme, prefixVar('--palette-background-body'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.1)\")), _defineProperty(_theme$getColorScheme, prefixVar('--palette-background-surface'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.08)\")), _defineProperty(_theme$getColorScheme, prefixVar('--palette-background-level1'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.2)\")), _defineProperty(_theme$getColorScheme, prefixVar('--palette-background-level2'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.4)\")), _defineProperty(_theme$getColorScheme, prefixVar('--palette-background-level3'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.6)\")), _defineProperty(_theme$getColorScheme, prefixVar('--palette-text-primary'), getCssVar(\"palette-\".concat(color, \"-100\"))), _defineProperty(_theme$getColorScheme, prefixVar('--palette-text-secondary'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.72)\")), _defineProperty(_theme$getColorScheme, prefixVar('--palette-text-tertiary'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.6)\")), _defineProperty(_theme$getColorScheme, prefixVar('--palette-text-icon'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.6)\")), _defineProperty(_theme$getColorScheme, prefixVar('--palette-divider'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.2)\")), _defineProperty(_theme$getColorScheme, '--variant-plainColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 1)\")), _defineProperty(_theme$getColorScheme, '--variant-plainHoverColor', getCssVar(\"palette-\".concat(color, \"-50\"))), _defineProperty(_theme$getColorScheme, '--variant-plainHoverBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.16)\")), _defineProperty(_theme$getColorScheme, '--variant-plainActiveBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.32)\")), _defineProperty(_theme$getColorScheme, '--variant-plainDisabledColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.72)\")), _defineProperty(_theme$getColorScheme, '--variant-outlinedColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 1)\")), _defineProperty(_theme$getColorScheme, '--variant-outlinedHoverColor', getCssVar(\"palette-\".concat(color, \"-50\"))), _defineProperty(_theme$getColorScheme, '--variant-outlinedBg', 'initial'), _defineProperty(_theme$getColorScheme, '--variant-outlinedBorder', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.4)\")), _defineProperty(_theme$getColorScheme, '--variant-outlinedHoverBorder', getCssVar(\"palette-\".concat(color, \"-600\"))), _defineProperty(_theme$getColorScheme, '--variant-outlinedHoverBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.16)\")), _defineProperty(_theme$getColorScheme, '--variant-outlinedActiveBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.32)\")), _defineProperty(_theme$getColorScheme, '--variant-outlinedDisabledColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.72)\")), _defineProperty(_theme$getColorScheme, '--variant-outlinedDisabledBorder', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.2)\")), _defineProperty(_theme$getColorScheme, '--variant-softColor', getCssVar(\"palette-\".concat(color, \"-200\"))), _defineProperty(_theme$getColorScheme, '--variant-softBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.24)\")), _defineProperty(_theme$getColorScheme, '--variant-softHoverColor', '#fff'), _defineProperty(_theme$getColorScheme, '--variant-softHoverBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.32)\")), _defineProperty(_theme$getColorScheme, '--variant-softActiveBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.48)\")), _defineProperty(_theme$getColorScheme, '--variant-softDisabledColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.72)\")), _defineProperty(_theme$getColorScheme, '--variant-softDisabledBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.12)\")), _defineProperty(_theme$getColorScheme, '--variant-solidColor', '#fff'), _defineProperty(_theme$getColorScheme, '--variant-solidBg', getCssVar(\"palette-\".concat(color, \"-500\"))), _defineProperty(_theme$getColorScheme, '--variant-solidHoverColor', '#fff'), _defineProperty(_theme$getColorScheme, '--variant-solidHoverBg', getCssVar(\"palette-\".concat(color, \"-600\"))), _defineProperty(_theme$getColorScheme, '--variant-solidActiveBg', getCssVar(\"palette-\".concat(color, \"-600\"))), _defineProperty(_theme$getColorScheme, '--variant-solidDisabledColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.72)\")), _defineProperty(_theme$getColorScheme, '--variant-solidDisabledBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.12)\")), _theme$getColorScheme)), _defineProperty(_result$color, theme.getColorSchemeSelector('light'), (_theme$getColorScheme2 = {}, _defineProperty(_theme$getColorScheme2, prefixVar('--palette-focusVisible'), getCssVar(\"palette-\".concat(color, \"-500\"))), _defineProperty(_theme$getColorScheme2, prefixVar('--palette-background-body'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.1)\")), _defineProperty(_theme$getColorScheme2, prefixVar('--palette-background-surface'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.08)\")), _defineProperty(_theme$getColorScheme2, prefixVar('--palette-background-level1'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.2)\")), _defineProperty(_theme$getColorScheme2, prefixVar('--palette-background-level2'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.32)\")), _defineProperty(_theme$getColorScheme2, prefixVar('--palette-background-level3'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.48)\")), _defineProperty(_theme$getColorScheme2, prefixVar('--palette-text-primary'), getCssVar(\"palette-\".concat(color, \"-700\"))), _defineProperty(_theme$getColorScheme2, prefixVar('--palette-text-secondary'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-darkChannel\")), \" / 0.8)\")), _defineProperty(_theme$getColorScheme2, prefixVar('--palette-text-tertiary'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-darkChannel\")), \" / 0.68)\")), _defineProperty(_theme$getColorScheme2, prefixVar('--palette-text-icon'), getCssVar(\"palette-\".concat(color, \"-500\"))), _defineProperty(_theme$getColorScheme2, prefixVar('--palette-divider'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.32)\")), _defineProperty(_theme$getColorScheme2, '--variant-plainColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-darkChannel\")), \" / 0.8)\")), _defineProperty(_theme$getColorScheme2, '--variant-plainHoverColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-darkChannel\")), \" / 1)\")), _defineProperty(_theme$getColorScheme2, '--variant-plainHoverBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.12)\")), _defineProperty(_theme$getColorScheme2, '--variant-plainActiveBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.24)\")), _defineProperty(_theme$getColorScheme2, '--variant-plainDisabledColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.6)\")), _defineProperty(_theme$getColorScheme2, '--variant-outlinedColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 1)\")), _defineProperty(_theme$getColorScheme2, '--variant-outlinedBorder', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.4)\")), _defineProperty(_theme$getColorScheme2, '--variant-outlinedHoverColor', getCssVar(\"palette-\".concat(color, \"-600\"))), _defineProperty(_theme$getColorScheme2, '--variant-outlinedHoverBorder', getCssVar(\"palette-\".concat(color, \"-300\"))), _defineProperty(_theme$getColorScheme2, '--variant-outlinedHoverBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.12)\")), _defineProperty(_theme$getColorScheme2, '--variant-outlinedActiveBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.24)\")), _defineProperty(_theme$getColorScheme2, '--variant-outlinedDisabledColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.6)\")), _defineProperty(_theme$getColorScheme2, '--variant-outlinedDisabledBorder', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.12)\")), _defineProperty(_theme$getColorScheme2, '--variant-softColor', getCssVar(\"palette-\".concat(color, \"-600\"))), _defineProperty(_theme$getColorScheme2, '--variant-softBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.8)\")), _defineProperty(_theme$getColorScheme2, '--variant-softHoverColor', getCssVar(\"palette-\".concat(color, \"-700\"))), _defineProperty(_theme$getColorScheme2, '--variant-softHoverBg', getCssVar(\"palette-\".concat(color, \"-200\"))), _defineProperty(_theme$getColorScheme2, '--variant-softActiveBg', getCssVar(\"palette-\".concat(color, \"-300\"))), _defineProperty(_theme$getColorScheme2, '--variant-softDisabledColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.6)\")), _defineProperty(_theme$getColorScheme2, '--variant-softDisabledBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.08)\")), _defineProperty(_theme$getColorScheme2, '--variant-solidColor', getCssVar('palette-common-white')), _defineProperty(_theme$getColorScheme2, '--variant-solidBg', getCssVar(\"palette-\".concat(color, \"-\").concat(color === 'neutral' ? '700' : '500'))), _defineProperty(_theme$getColorScheme2, '--variant-solidHoverColor', getCssVar('palette-common-white')), _defineProperty(_theme$getColorScheme2, '--variant-solidHoverBg', getCssVar(\"palette-\".concat(color, \"-\").concat(color === 'neutral' ? '600' : '600'))), _defineProperty(_theme$getColorScheme2, '--variant-solidActiveBg', getCssVar(\"palette-\".concat(color, \"-\").concat(color === 'neutral' ? '600' : '600'))), _defineProperty(_theme$getColorScheme2, '--variant-solidDisabledColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.6)\")), _defineProperty(_theme$getColorScheme2, '--variant-solidDisabledBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-mainChannel\")), \" / 0.08)\")), _theme$getColorScheme2)), _result$color);\n    }\n  });\n  return result;\n};\nexport var createSolidInversion = function createSolidInversion(theme, addDefaultValues) {\n  var getCssVarDefault = createGetCssVar(theme.cssVarPrefix);\n  var prefixVar = createPrefixVar(theme.cssVarPrefix);\n  var result = {};\n  var getCssVar = addDefaultValues ? function (cssVar) {\n    var tokens = cssVar.split('-');\n    var color = tokens[1];\n    var value = tokens[2];\n    return getCssVarDefault(cssVar, theme.palette[color][value]);\n  } : getCssVarDefault;\n  Object.entries(theme.palette).forEach(function (entry) {\n    var _entry3 = _slicedToArray(entry, 2),\n      color = _entry3[0],\n      colorPalette = _entry3[1];\n    if (isVariantPalette(colorPalette)) {\n      var _result$color2;\n      result[color] = (_result$color2 = {\n        colorScheme: 'dark',\n        '--Badge-ringColor': getCssVar(\"palette-\".concat(color, \"-solidBg\"))\n      }, _defineProperty(_result$color2, prefixVar('--palette-focusVisible'), getCssVar(\"palette-\".concat(color, \"-200\"))), _defineProperty(_result$color2, prefixVar('--palette-background-body'), 'rgba(0 0 0 / 0.1)'), _defineProperty(_result$color2, prefixVar('--palette-background-surface'), 'rgba(0 0 0 / 0.06)'), _defineProperty(_result$color2, prefixVar('--palette-background-popup'), getCssVar(\"palette-\".concat(color, \"-700\"))), _defineProperty(_result$color2, prefixVar('--palette-background-level1'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-darkChannel\")), \" / 0.2)\")), _defineProperty(_result$color2, prefixVar('--palette-background-level2'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-darkChannel\")), \" / 0.36)\")), _defineProperty(_result$color2, prefixVar('--palette-background-level3'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-darkChannel\")), \" / 0.6)\")), _defineProperty(_result$color2, prefixVar('--palette-text-primary'), getCssVar(\"palette-common-white\")), _defineProperty(_result$color2, prefixVar('--palette-text-secondary'), getCssVar(\"palette-\".concat(color, \"-200\"))), _defineProperty(_result$color2, prefixVar('--palette-text-tertiary'), getCssVar(\"palette-\".concat(color, \"-300\"))), _defineProperty(_result$color2, prefixVar('--palette-text-icon'), getCssVar(\"palette-\".concat(color, \"-200\"))), _defineProperty(_result$color2, prefixVar('--palette-divider'), \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.32)\")), _defineProperty(_result$color2, '--variant-plainColor', getCssVar(\"palette-\".concat(color, \"-50\"))), _defineProperty(_result$color2, '--variant-plainHoverColor', \"#fff\"), _defineProperty(_result$color2, '--variant-plainHoverBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.12)\")), _defineProperty(_result$color2, '--variant-plainActiveBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.32)\")), _defineProperty(_result$color2, '--variant-plainDisabledColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.72)\")), _defineProperty(_result$color2, '--variant-outlinedColor', getCssVar(\"palette-\".concat(color, \"-50\"))), _defineProperty(_result$color2, '--variant-outlinedBorder', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.5)\")), _defineProperty(_result$color2, '--variant-outlinedHoverColor', \"#fff\"), _defineProperty(_result$color2, '--variant-outlinedHoverBorder', getCssVar(\"palette-\".concat(color, \"-300\"))), _defineProperty(_result$color2, '--variant-outlinedHoverBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.12)\")), _defineProperty(_result$color2, '--variant-outlinedActiveBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.32)\")), _defineProperty(_result$color2, '--variant-outlinedDisabledColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.72)\")), _defineProperty(_result$color2, '--variant-outlinedDisabledBorder', \"rgba(255 255 255 / 0.2)\"), _defineProperty(_result$color2, '--variant-softColor', getCssVar(\"palette-common-white\")), _defineProperty(_result$color2, '--variant-softHoverColor', getCssVar(\"palette-common-white\")), _defineProperty(_result$color2, '--variant-softBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.24)\")), _defineProperty(_result$color2, '--variant-softHoverBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.36)\")), _defineProperty(_result$color2, '--variant-softActiveBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.16)\")), _defineProperty(_result$color2, '--variant-softDisabledColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.72)\")), _defineProperty(_result$color2, '--variant-softDisabledBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.1)\")), _defineProperty(_result$color2, '--variant-solidColor', getCssVar(\"palette-\".concat(color, \"-\").concat(color === 'neutral' ? '600' : '500'))), _defineProperty(_result$color2, '--variant-solidBg', getCssVar(\"palette-common-white\")), _defineProperty(_result$color2, '--variant-solidHoverBg', getCssVar(\"palette-common-white\")), _defineProperty(_result$color2, '--variant-solidActiveBg', getCssVar(\"palette-\".concat(color, \"-100\"))), _defineProperty(_result$color2, '--variant-solidDisabledColor', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.72)\")), _defineProperty(_result$color2, '--variant-solidDisabledBg', \"rgba(\".concat(getCssVar(\"palette-\".concat(color, \"-lightChannel\")), \" / 0.1)\")), _result$color2);\n    }\n  });\n  return result;\n};","map":null,"metadata":{},"sourceType":"module"}