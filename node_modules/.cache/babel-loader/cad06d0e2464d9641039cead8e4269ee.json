{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"component\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { styled, useThemeProps } from '../styles';\nimport useSlot from '../utils/useSlot';\nimport { getFormLabelUtilityClass } from './formLabelClasses';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root'],\n    asterisk: ['asterisk']\n  };\n  return composeClasses(slots, getFormLabelUtilityClass, {});\n};\nconst FormLabelRoot = styled('label', {\n  name: 'JoyFormLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  '--Icon-fontSize': 'calc(var(--FormLabel-lineHeight) * 1em)',\n  WebkitTapHighlightColor: 'transparent',\n  alignSelf: 'var(--FormLabel-alignSelf)',\n  // to not fill the block space. It seems like a bug when clicking on empty space (within the label area), even though it is not.\n  display: 'flex',\n  gap: '2px',\n  alignItems: 'center',\n  flexWrap: 'wrap',\n  userSelect: 'none',\n  fontFamily: theme.vars.fontFamily.body,\n  fontSize: `var(--FormLabel-fontSize, ${theme.vars.fontSize.sm})`,\n  fontWeight: theme.vars.fontWeight.md,\n  lineHeight: `var(--FormLabel-lineHeight, ${theme.vars.lineHeight.sm})`,\n  color: `var(--FormLabel-color, ${theme.vars.palette.text.primary})`,\n  margin: 'var(--FormLabel-margin, 0px)'\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'JoyFormLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})({\n  color: 'var(--FormLabel-asteriskColor)'\n});\n/**\n *\n * Demos:\n *\n * - [Input](https://mui.com/joy-ui/react-input/)\n *\n * API:\n *\n * - [FormLabel API](https://mui.com/joy-ui/api/form-label/)\n */\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  var _ref, _inProps$required;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyFormLabel'\n  });\n  const {\n      children,\n      component = 'label',\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const formControl = React.useContext(FormControlContext);\n  const required = (_ref = (_inProps$required = inProps.required) != null ? _inProps$required : formControl == null ? void 0 : formControl.required) != null ? _ref : false;\n  const ownerState = _extends({}, props, {\n    required\n  });\n  const classes = useUtilityClasses();\n  const externalForwardedProps = _extends({}, other, {\n    component,\n    slots,\n    slotProps\n  });\n  const [SlotRoot, rootProps] = useSlot('root', {\n    additionalProps: {\n      htmlFor: formControl == null ? void 0 : formControl.htmlFor,\n      id: formControl == null ? void 0 : formControl.labelId\n    },\n    ref,\n    className: classes.root,\n    elementType: FormLabelRoot,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotAsterisk, asteriskProps] = useSlot('asterisk', {\n    additionalProps: {\n      'aria-hidden': true\n    },\n    className: classes.asterisk,\n    elementType: AsteriskComponent,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [children, required && /*#__PURE__*/_jsxs(SlotAsterisk, _extends({}, asteriskProps, {\n      children: [\"\\u2009\", '*']\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The asterisk is added if required=`true`\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    asterisk: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    asterisk: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormLabel;","map":null,"metadata":{},"sourceType":"module"}