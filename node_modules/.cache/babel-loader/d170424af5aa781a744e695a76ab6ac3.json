{"ast":null,"code":"'use client';\n\nimport { deepmerge } from '@mui/utils';\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport { createSoftInversion, createSolidInversion } from './variantUtils';\nimport THEME_ID from './identifier';\nvar _createCssVarsProvide = createCssVarsProvider({\n    themeId: THEME_ID,\n    theme: defaultTheme,\n    attribute: 'data-joy-color-scheme',\n    modeStorageKey: 'joy-mode',\n    colorSchemeStorageKey: 'joy-color-scheme',\n    defaultColorScheme: {\n      light: 'light',\n      dark: 'dark'\n    },\n    resolveTheme: function resolveTheme(mergedTheme) {\n      var colorInversionInput = mergedTheme.colorInversion;\n      mergedTheme.colorInversion = deepmerge({\n        soft: createSoftInversion(mergedTheme),\n        solid: createSolidInversion(mergedTheme)\n      }, typeof colorInversionInput === 'function' ? colorInversionInput(mergedTheme) : colorInversionInput, {\n        clone: false\n      });\n      return mergedTheme;\n    }\n  }),\n  CssVarsProvider = _createCssVarsProvide.CssVarsProvider,\n  useColorScheme = _createCssVarsProvide.useColorScheme,\n  getInitColorSchemeScript = _createCssVarsProvide.getInitColorSchemeScript;\nexport { CssVarsProvider, useColorScheme, getInitColorSchemeScript };","map":null,"metadata":{},"sourceType":"module"}