{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"C:\\\\yassinePortfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:\\\\yassinePortfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"color\", \"textColor\", \"variant\"],\n  _excluded2 = [\"children\", \"disabled\", \"onBlur\", \"onFocus\", \"level\", \"overlay\", \"underline\", \"endDecorator\", \"startDecorator\", \"component\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_capitalize as capitalize, unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible, unstable_isMuiElement as isMuiElement } from '@mui/utils';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { useColorInversion } from '../styles/ColorInversion';\nimport useSlot from '../utils/useSlot';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport { TypographyNestedContext, TypographyInheritContext } from '../Typography/Typography';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var level = ownerState.level,\n    color = ownerState.color,\n    variant = ownerState.variant,\n    underline = ownerState.underline,\n    focusVisible = ownerState.focusVisible,\n    disabled = ownerState.disabled;\n  var slots = {\n    root: ['root', color && \"color\".concat(capitalize(color)), disabled && 'disabled', focusVisible && 'focusVisible', level, underline && \"underline\".concat(capitalize(underline)), variant && \"variant\".concat(capitalize(variant))],\n    startDecorator: ['startDecorator'],\n    endDecorator: ['endDecorator']\n  };\n  return composeClasses(slots, getLinkUtilityClass, {});\n};\nvar StartDecorator = styled('span', {\n  name: 'JoyLink',\n  slot: 'StartDecorator',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.startDecorator;\n  }\n})(function (_ref) {\n  var ownerState = _ref.ownerState;\n  var _ownerState$sx;\n  return _extends({\n    display: 'inline-flex',\n    marginInlineEnd: 'clamp(4px, var(--Link-gap, 0.375em), 0.75rem)'\n  }, typeof ownerState.startDecorator !== 'string' && (ownerState.alignItems === 'flex-start' || ((_ownerState$sx = ownerState.sx) == null ? void 0 : _ownerState$sx.alignItems) === 'flex-start') && {\n    marginTop: '2px' // this makes the alignment perfect in most cases\n  });\n});\n\nvar EndDecorator = styled('span', {\n  name: 'JoyLink',\n  slot: 'endDecorator',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.endDecorator;\n  }\n})(function (_ref2) {\n  var ownerState = _ref2.ownerState;\n  var _ownerState$sx2;\n  return _extends({\n    display: 'inline-flex',\n    marginInlineStart: 'clamp(4px, var(--Link-gap, 0.25em), 0.5rem)'\n  }, typeof ownerState.startDecorator !== 'string' && (ownerState.alignItems === 'flex-start' || ((_ownerState$sx2 = ownerState.sx) == null ? void 0 : _ownerState$sx2.alignItems) === 'flex-start') && {\n    marginTop: '2px' // this makes the alignment perfect in most cases\n  });\n});\n\nvar LinkRoot = styled('a', {\n  name: 'JoyLink',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_ref3) {\n  var theme = _ref3.theme,\n    ownerState = _ref3.ownerState;\n  var _theme$vars$palette, _theme$vars$palette2, _theme$vars$palette3, _theme$variants$owner, _theme$variants, _theme$variants2, _theme$variants3;\n  return [_extends({\n    '--Icon-fontSize': '1.25em',\n    '--Icon-color': 'currentColor',\n    '--CircularProgress-size': '1.25em',\n    '--CircularProgress-thickness': '3px'\n  }, ownerState.level && ownerState.level !== 'inherit' && theme.typography[ownerState.level], ownerState.level === 'inherit' && {\n    font: 'inherit'\n  }, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecorationLine: 'underline'\n    }\n  }, ownerState.underline === 'always' && {\n    textDecoration: 'underline'\n  }, ownerState.startDecorator && {\n    verticalAlign: 'bottom' // to make the link align with the parent's content\n  }, {\n    textDecorationThickness: 'max(0.08em, 1px)',\n    // steal from https://moderncss.dev/modern-css-for-dynamic-component-based-architecture/#css-reset-additions\n    textUnderlineOffset: '0.15em',\n    // steal from https://moderncss.dev/modern-css-for-dynamic-component-based-architecture/#css-reset-additions\n    display: 'inline-flex',\n    alignItems: 'center',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: theme.vars.radius.xs,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer'\n  }, ownerState.color !== 'context' && {\n    textDecorationColor: \"rgba(\".concat((_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette.mainChannel, \" / var(--Link-underlineOpacity, 0.72))\")\n  }, ownerState.variant ? _extends({\n    paddingBlock: 'min(0.1em, 4px)',\n    paddingInline: '0.25em'\n  }, !ownerState.nesting && {\n    marginInline: '-0.25em'\n  }) : _extends({}, ownerState.color !== 'context' && {\n    color: \"rgba(\".concat((_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2.mainChannel, \" / 1)\")\n  }, _defineProperty({}, \"&.\".concat(linkClasses.disabled), _extends({\n    pointerEvents: 'none'\n  }, ownerState.color !== 'context' && {\n    color: \"rgba(\".concat((_theme$vars$palette3 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette3.mainChannel, \" / 0.6)\")\n  }))), {\n    userSelect: 'none',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    }\n  }, ownerState.overlay ? _defineProperty({\n    position: 'initial',\n    '&::after': {\n      content: '\"\"',\n      display: 'block',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      borderRadius: \"var(--unstable_actionRadius, inherit)\",\n      margin: \"var(--unstable_actionMargin)\"\n    }\n  }, \"\".concat(theme.focus.selector), {\n    '&::after': theme.focus.default\n  }) : _defineProperty({\n    position: 'relative'\n  }, theme.focus.selector, theme.focus.default)), ownerState.variant && _extends({}, (_theme$variants$owner = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants$owner[ownerState.color], _defineProperty({\n    '&:hover': (_theme$variants = theme.variants[\"\".concat(ownerState.variant, \"Hover\")]) == null ? void 0 : _theme$variants[ownerState.color],\n    '&:active': (_theme$variants2 = theme.variants[\"\".concat(ownerState.variant, \"Active\")]) == null ? void 0 : _theme$variants2[ownerState.color]\n  }, \"&.\".concat(linkClasses.disabled), (_theme$variants3 = theme.variants[\"\".concat(ownerState.variant, \"Disabled\")]) == null ? void 0 : _theme$variants3[ownerState.color]))];\n});\n/**\n *\n * Demos:\n *\n * - [Link](https://mui.com/joy-ui/react-link/)\n *\n * API:\n *\n * - [Link API](https://mui.com/joy-ui/api/link/)\n */\nvar Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  var _useThemeProps = useThemeProps({\n      props: inProps,\n      name: 'JoyLink'\n    }),\n    _useThemeProps$color = _useThemeProps.color,\n    colorProp = _useThemeProps$color === void 0 ? 'primary' : _useThemeProps$color,\n    textColor = _useThemeProps.textColor,\n    variant = _useThemeProps.variant,\n    themeProps = _objectWithoutPropertiesLoose(_useThemeProps, _excluded);\n  var _useColorInversion = useColorInversion(variant),\n    getColor = _useColorInversion.getColor;\n  var color = getColor(inProps.color, colorProp);\n  var nesting = React.useContext(TypographyNestedContext);\n  var inheriting = React.useContext(TypographyInheritContext);\n  var props = extendSxProp(_extends({}, themeProps, {\n    color: textColor\n  }));\n  var children = props.children,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    onBlur = props.onBlur,\n    onFocus = props.onFocus,\n    _props$level = props.level,\n    levelProp = _props$level === void 0 ? 'body-md' : _props$level,\n    _props$overlay = props.overlay,\n    overlay = _props$overlay === void 0 ? false : _props$overlay,\n    _props$underline = props.underline,\n    underline = _props$underline === void 0 ? 'hover' : _props$underline,\n    endDecorator = props.endDecorator,\n    startDecorator = props.startDecorator,\n    component = props.component,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  var level = nesting || inheriting ? inProps.level || 'inherit' : levelProp;\n  var _useIsFocusVisible = useIsFocusVisible(),\n    isFocusVisibleRef = _useIsFocusVisible.isFocusVisibleRef,\n    handleBlurVisible = _useIsFocusVisible.onBlur,\n    handleFocusVisible = _useIsFocusVisible.onFocus,\n    focusVisibleRef = _useIsFocusVisible.ref;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    focusVisible = _React$useState2[0],\n    setFocusVisible = _React$useState2[1];\n  var handleRef = useForkRef(ref, focusVisibleRef);\n  var handleBlur = function handleBlur(event) {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  var handleFocus = function handleFocus(event) {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  var ownerState = _extends({}, props, {\n    color: color,\n    disabled: disabled,\n    focusVisible: focusVisible,\n    underline: underline,\n    variant: variant,\n    level: level,\n    overlay: overlay,\n    nesting: nesting\n  });\n  var classes = useUtilityClasses(ownerState);\n  var externalForwardedProps = _extends({}, other, {\n    component: component,\n    slots: slots,\n    slotProps: slotProps\n  });\n  var _useSlot = useSlot('root', {\n      additionalProps: {\n        onBlur: handleBlur,\n        onFocus: handleFocus\n      },\n      ref: handleRef,\n      className: classes.root,\n      elementType: LinkRoot,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState\n    }),\n    _useSlot2 = _slicedToArray(_useSlot, 2),\n    SlotRoot = _useSlot2[0],\n    rootProps = _useSlot2[1];\n  var _useSlot3 = useSlot('startDecorator', {\n      className: classes.startDecorator,\n      elementType: StartDecorator,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState\n    }),\n    _useSlot4 = _slicedToArray(_useSlot3, 2),\n    SlotStartDecorator = _useSlot4[0],\n    startDecoratorProps = _useSlot4[1];\n  var _useSlot5 = useSlot('endDecorator', {\n      className: classes.endDecorator,\n      elementType: EndDecorator,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState\n    }),\n    _useSlot6 = _slicedToArray(_useSlot5, 2),\n    SlotEndDecorator = _useSlot6[0],\n    endDecoratorProps = _useSlot6[1];\n  return /*#__PURE__*/_jsx(TypographyNestedContext.Provider, {\n    value: true,\n    children: /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n      children: [startDecorator && /*#__PURE__*/_jsx(SlotStartDecorator, _extends({}, startDecoratorProps, {\n        children: startDecorator\n      })), isMuiElement(children, ['Skeleton']) ? /*#__PURE__*/React.cloneElement(children, {\n        variant: children.props.variant || 'inline'\n      }) : children, endDecorator && /*#__PURE__*/_jsx(SlotEndDecorator, _extends({}, endDecoratorProps, {\n        children: endDecorator\n      }))]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Element placed after the children.\n   */\n  endDecorator: PropTypes.node,\n  /**\n   * Applies the theme typography styles.\n   * @default 'body-md'\n   */\n  level: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'body3', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit']), PropTypes.string]),\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * If `true`, the ::after pseudo element is added to cover the area of interaction.\n   * The parent of the overlay Link should have `relative` CSS position.\n   * @default false\n   */\n  overlay: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    endDecorator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startDecorator: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    endDecorator: PropTypes.elementType,\n    root: PropTypes.elementType,\n    startDecorator: PropTypes.elementType\n  }),\n  /**\n   * Element placed before the children.\n   */\n  startDecorator: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The system color.\n   */\n  textColor: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'hover'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme link styles.\n   * @default 'plain'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Link;","map":null,"metadata":{},"sourceType":"module"}